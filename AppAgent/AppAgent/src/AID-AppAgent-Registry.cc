//
//% $Id$ 
//
//
// Copyright (C) 2002-2007
// The MeqTree Foundation & 
// ASTRON (Netherlands Foundation for Research in Astronomy)
// P.O.Box 2, 7990 AA Dwingeloo, The Netherlands
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, see <http://www.gnu.org/licenses/>,
// or write to the Free Software Foundation, Inc., 
// 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//

    // This file is generated automatically -- do not edit
    // Generated by /home/oms/LOFAR/autoconf_share/../Timba/DMI/aid/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
    using namespace DMI;
  
    int aidRegistry_AppAgent ()
    {
      static int res = 

        AtomicID::registerId(-1243,"Agent")+
        AtomicID::registerId(-1216,"Map")+
        AtomicID::registerId(-1236,"Receive")+
        AtomicID::registerId(-1231,"Post")+
        AtomicID::registerId(-1207,"In")+
        AtomicID::registerId(-1217,"Out")+
        AtomicID::registerId(-1221,"Default")+
        AtomicID::registerId(-1041,"Scope")+
        AtomicID::registerId(-1212,"Unmapped")+
        AtomicID::registerId(-1214,"Prefix")+
        AtomicID::registerId(-1053,"Local")+
        AtomicID::registerId(-1096,"Host")+
        AtomicID::registerId(-1211,"Global")+
        AtomicID::registerId(-1244,"Priority")+
        AtomicID::registerId(-1237,"Lowest")+
        AtomicID::registerId(-1218,"Lower")+
        AtomicID::registerId(-1238,"Low")+
        AtomicID::registerId(-1223,"Normal")+
        AtomicID::registerId(-1246,"High")+
        AtomicID::registerId(-1222,"Higher")+
        AtomicID::registerId(-1220,"BOIO")+
        AtomicID::registerId(-1224,"File")+
        AtomicID::registerId(-1122,"Name")+
        AtomicID::registerId(-1215,"Mode")+
        AtomicID::registerId(-1080,"Event")+
        AtomicID::registerId(-1103,"Data")+
        AtomicID::registerId(-1228,"AppAgent")+
        AtomicID::registerId(-1055,"Text")+
        AtomicID::registerId(-1496,"Category")+
        AtomicID::registerId(-1495,"Destination")+
        AtomicID::registerId(-1543,"Address")+
        AtomicID::registerId(-1210,"Notify")+
        AtomicID::registerId(-1493,"Warning")+
        AtomicID::registerId(-1056,"Error")+
        AtomicID::registerId(-1497,"Critical")+
        AtomicID::registerId(-1494,"Info")+
        AtomicID::registerId(-1482,"Debug")+
        AtomicID::registerId(-1541,"Record")+
        AtomicID::registerId(-1036,"Input")+
        AtomicID::registerId(-1241,"Output")+
        AtomicID::registerId(-1165,"Channel")+
        AtomicID::registerId(-1085,"Type")+
        AtomicID::registerId(-1336,"Delete")+
        AtomicID::registerId(-1641,"On")+
        AtomicID::registerId(-1642,"Abort")+
        AtomicID::registerId(-1604,"MT")+
        AtomicID::registerId(-1469,"Queue")+
        AtomicID::registerId(-1255,"Size")+
        AtomicID::registerId(-1038,"Init")+
        AtomicID::registerId(-1240,"Vis")+
        AtomicID::registerId(-1235,"Parameters")+
        AtomicID::registerId(-1201,"Header")+
        AtomicID::registerId(-1135,"Footer")+
        AtomicID::registerId(-1232,"Tile")+
        AtomicID::registerId(-1219,"Suspend")+
        AtomicID::registerId(-1239,"Resume")+
    0;
    return res;
  }
  
  int __dum_call_registries_for_AppAgent = aidRegistry_AppAgent();

